
========================================================================

** ELF Header Information

    File Name: test.obj

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    File Type: ET_REL (Relocatable object) (1)
    Machine: EM_ARM (ARM)

    Entry offset (in SHF_ENTRYSECT section): 0x00000000
    Flags: EF_ARM_MAPSYMSFIRST (0x02000010)

    EABI conformance : ARM EABI Version 2.

    Built with
    Thumb C Compiler, ADS1.2 [Build 842]
    ARM Linker, ADS1.2 [Build 842] 

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 0
    Section header entries: 9

    Program header offset: 0 (0x00000000)
    Section header offset: 1312 (0x00000520)

    Section header string table index: 8

========================================================================

** Section #1 '.text' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 116 bytes (alignment 4)

    my_add
    BuildAttributes$$THUMB_ISAv1$M$PE$A:L22$X:L11$S22$~IW$~STKCKD$~SHL$OSPACE$PRES8
    $t
    .text
        0x00000000:    1840        @.      ADD      r0,r0,r1
        0x00000002:    1a41        A.      SUB      r1,r0,r1
        0x00000004:    1a40        @.      SUB      r0,r0,r1
        0x00000006:    1840        @.      ADD      r0,r0,r1
        0x00000008:    4770        pG      BX       r14
    entrance
        0x0000000a:    b510        ..      PUSH     {r4,r14}
        0x0000000c:    b09c        ..      SUB      r13,#0x70
        0x0000000e:    a803        ..      ADD      r0,r13,#0xc
        0x00000010:    2264        d"      MOV      r2,#0x64
        0x00000012:    4910        .I      LDR      r1,0x54
    $b
        0x00000014:    f7fffffe    ....    BL       __rt_memcpy
        0x00000018:    4c0f        .L      LDR      r4,0x58
        0x0000001a:    2002        .       MOV      r0,#2
        0x0000001c:    6861        ah      LDR      r1,[r4,#4]
    $b
        0x0000001e:    f7fffffe    ....    BL       my_add  ; 0x0
        0x00000022:    1c02        ..      MOV      r2,r0
        0x00000024:    2302        .#      MOV      r3,#2
        0x00000026:    5ee0        .^      LDRSH    r0,[r4,r3]
        0x00000028:    6861        ah      LDR      r1,[r4,#4]
        0x0000002a:    9202        ..      STR      r2,[r13,#8]
        0x0000002c:    9000        ..      STR      r0,[r13,#0]
        0x0000002e:    9101        ..      STR      r1,[r13,#4]
        0x00000030:    7863        cx      LDRB     r3,[r4,#1]
        0x00000032:    7822        "x      LDRB     r2,[r4,#0]
        0x00000034:    a109        ..      ADR      r1,0x5c
        0x00000036:    a803        ..      ADD      r0,r13,#0xc
    $b
        0x00000038:    f7fffffe    ....    BL       _sprintf
        0x0000003c:    a903        ..      ADD      r1,r13,#0xc
        0x0000003e:    a00c        ..      ADR      r0,0x70
    $b
        0x00000040:    f7fffffe    ....    BL       _printf
        0x00000044:    8860        `.      LDRH     r0,[r4,#2]
        0x00000046:    3001        .0      ADD      r0,#1
        0x00000048:    8060        `.      STRH     r0,[r4,#2]
        0x0000004a:    b01c        ..      ADD      r13,#0x70
        0x0000004c:    2000        .       MOV      r0,#0
        0x0000004e:    bd10        ..      POP      {r4,pc}
    main
        0x00000050:    2000        .       MOV      r0,#0
        0x00000052:    4770        pG      BX       r14
    $d
        0x00000054:    00000000    ....    DCD    0
        0x00000058:    00000000    ....    DCD    0
        0x0000005c:    63256325    %c%c    DCD    1663394597
        0x00000060:    323a6325    %c:2    DCD    842687269
        0x00000064:    25202b20     + %    DCD    622865184
        0x00000068:    203d2064    d =     DCD    540876900
        0x0000006c:    00006425    %d..    DCD    25637
        0x00000070:    00007325    %s..    DCD    29477

** Section #6 '.rel.text' (SHT_REL)
    Size   : 48 bytes (alignment 4)
    Symbol table '.symtab'
    6 relocations applied to section #1 '.text'


** Section #2 '.data' (SHT_PROGBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 8 bytes (alignment 4)


** Section #3 '.constdata' (SHT_PROGBITS) [SHF_ALLOC]
    Size   : 100 bytes


** Section #4 '.symtab' (SHT_SYMTAB)
    Size   : 512 bytes (alignment 4)
    String table '.strtab'
    Last local symbol no. 18


** Section #5 '.strtab' (SHT_STRTAB)
    Size   : 256 bytes


** Section #7 '.comment' (SHT_PROGBITS)
    Size   : 148 bytes


** Section #8 '.shstrtab' (SHT_STRTAB)
    Size   : 72 bytes


